/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DoctorRole;

import business.Doctor.Doctor;
import business.Doctor.DoctorDirectorty;
import business.EcoSystem;
import business.Organization.DoctorOrganization;
import business.UserAccount.UserAccount;
import business.WorkQueue.LabTestWorkRequest;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private DoctorOrganization organization;
    private EcoSystem business;
    private UserAccount userAccount;
    private Doctor currentDoctor;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel workArea, UserAccount account, DoctorOrganization organization, EcoSystem business) {
        initComponents();

        this.workArea = workArea;
        this.organization = organization;
        this.business = business;
        this.userAccount = account;

       currentDoctor= populateDoctor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Appointments = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        appointments = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        requestBlood = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        timeLabel.setFont(new java.awt.Font("SF Pro Display", 1, 36)); // NOI18N
        timeLabel.setText("3:45 PM");
        jPanel6.add(timeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 20, -1, -1));

        jLabel10.setFont(new java.awt.Font("SF Pro Display", 1, 36)); // NOI18N
        jLabel10.setText("Doctors Dashboard");
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel1.setForeground(new java.awt.Color(152, 151, 151));
        jLabel1.setText("Manage everything related to Pharmaceutical Enterprises");
        jPanel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        Appointments.setBackground(new java.awt.Color(255, 255, 255));
        Appointments.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Appointments.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1040, 190, 30));
        Appointments.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        appointments.setBackground(new java.awt.Color(255, 255, 255));
        appointments.setPreferredSize(new java.awt.Dimension(100, 48));
        appointments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                appointmentsMousePressed(evt);
            }
        });
        appointments.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        appointments.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 30, -1));

        Appointments.add(appointments, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 290, 60));

        requestBlood.setBackground(new java.awt.Color(255, 255, 255));
        requestBlood.setPreferredSize(new java.awt.Dimension(100, 48));
        requestBlood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                requestBloodMousePressed(evt);
            }
        });
        requestBlood.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        requestBlood.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 30, -1));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(115, 120, 128));
        jLabel7.setText("Manage Appointments");
        requestBlood.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 200, -1));

        Appointments.add(requestBlood, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 100, 220, 60));
        Appointments.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 770, 290, -1));

        jLabel6.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(115, 120, 128));
        jLabel6.setText("Request Blood");
        Appointments.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(115, 120, 128));
        jLabel8.setText("Manage Profile");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        Appointments.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 200, -1));

        rightPanel.setBackground(new java.awt.Color(250, 249, 251));
        rightPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1254, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Appointments, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Appointments, javax.swing.GroupLayout.PREFERRED_SIZE, 996, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void appointmentsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsMousePressed
        // TODO add your handling code here:
        //ad  appointments();
    }//GEN-LAST:event_appointmentsMousePressed

    private void requestBloodMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestBloodMousePressed
        // TODO add your handling code here:
        //   requestBlood();
    }//GEN-LAST:event_requestBloodMousePressed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:

        updateProfile();
    }//GEN-LAST:event_jLabel8MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Appointments;
    private javax.swing.JPanel appointments;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel requestBlood;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables

    private void updateProfile() {
        appointments.setBackground(new Color(255, 255, 255));
        requestBlood.setBackground(new Color(213, 230, 249));

        ManageDoctorProfile docProfile = new ManageDoctorProfile(currentDoctor);

        rightPanel.add(docProfile);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
    }

    private Doctor populateDoctor() {

        DoctorDirectorty  directory = organization.getDoctorDirectory();
        System.out.println("ui.DoctorRole.DoctorWorkAreaJPanel.populateDoctor()"+ userAccount.getUsername());
        for (Doctor doctor : directory.getDoctorList()) {
            if (doctor.e.getName().equals(userAccount.getUsername())) {
                System.out.println("Doctor found: " + doctor.e.getName());
                return doctor;
            }
        }

        System.out.println("Doctor not found");
        return null;

    }
}
